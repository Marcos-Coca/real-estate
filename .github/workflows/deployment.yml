name: Deployment Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  Avoid-Redundancy:
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'push'}}
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{github.token}}

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  Build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  Unit-Tests:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Unit tests
        run: npm run test:ci

  E2E-Tests:
    runs-on: "ubuntu-latest"
    needs: [Build]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: E2E tests
        run: npx playwright test

  Deploy-Production:
    runs-on: ubuntu-latest
    needs: [Lint, Unit-Tests, E2E-Tests]
    if: ${{github.event_name == 'push'}}
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
